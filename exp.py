# -*- coding: utf-8 -*-
"""EXP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ftRf6PjifBMIt_4fU8RCTycAjilyTzpr
"""

# Import packages
import pandas as pd
import numpy as np
import datetime as dt
import matplotlib.pyplot as plt
from dateutil.relativedelta import *
from pandas.tseries.offsets import *
from scipy import stats
from scipy.interpolate import make_interp_spline
import csv
import math
import statsmodels.api as sm
import os
import time
import glob
from scipy.stats import norm
from dateutil.relativedelta import relativedelta

# Loading the CSV files
exp1 = pd.read_csv('/content/experiment1_clean.csv')
exp2 = pd.read_csv('/content/experiment2_clean.csv')

# Processing
exp1['answer'] = exp1.groupby(['scales', 'exp_group', 'stimulus', 'workerid'])['response'].transform('mean')
exp2['answer'] = exp2.groupby(['scales', 'exp_group', 'stimulus', 'workerid'])['response'].transform('mean')

exp1_1 = exp1[['workerid', 'scales', 'within_group', 'exp_group', 'answer', 'stimulus']].drop_duplicates()
exp2_1 = exp2[['workerid', 'scales', 'within_group', 'exp_group', 'answer', 'stimulus']].drop_duplicates()

exp1_1['obs'] = exp1_1.groupby(['scales', 'exp_group'])['workerid'].transform('count')
exp2_1['obs'] = exp2_1.groupby(['scales', 'exp_group'])['workerid'].transform('count')

exp1_1['yes'] = exp1_1.groupby(['scales', 'exp_group'])['answer'].transform(lambda x: (x == 0).sum())
exp1_1['unsure'] = exp1_1.groupby(['scales', 'exp_group'])['answer'].transform(lambda x: (x == 0.5).sum())
exp1_1['no'] = exp1_1.groupby(['scales', 'exp_group'])['answer'].transform(lambda x: (x == 1).sum())

exp2_1['yes'] = exp2_1.groupby(['scales', 'exp_group'])['answer'].transform(lambda x: (x == 0).sum())
exp2_1['unsure'] = exp2_1.groupby(['scales', 'exp_group'])['answer'].transform(lambda x: (x == 0.5).sum())
exp2_1['no'] = exp2_1.groupby(['scales', 'exp_group'])['answer'].transform(lambda x: (x == 1).sum())

exp1_1['yes_rate'] = exp1_1['yes'] / exp1_1['obs']
exp1_1['unsure_rate'] = exp1_1['unsure'] / exp1_1['obs']
exp1_1['no_rate'] = exp1_1['no'] / exp1_1['obs']

exp2_1['yes_rate'] = exp2_1['yes'] / exp2_1['obs']
exp2_1['unsure_rate'] = exp2_1['unsure'] / exp2_1['obs']
exp2_1['no_rate'] = exp2_1['no'] / exp2_1['obs']

exp1_2 = exp1_1.drop(columns=['workerid', 'answer']).drop_duplicates()
exp2_2 = exp2_1.drop(columns=['workerid', 'answer']).drop_duplicates()

exp1_2 = exp1_2.sort_values(['scales', 'exp_group'])
exp2_2 = exp2_2.sort_values(['scales', 'exp_group'])

# Saving
exp1_2.to_csv('/content/experiment1_final.csv', index=False)
exp2_2.to_csv('/content/experiment2_final.csv', index=False)

# Download
from google.colab import files
files.download('/content/experiment1_final.csv')
files.download('/content/experiment2_final.csv')

# Loading
exp3 = pd.read_excel('/content/experiment3_clean.xlsx')
exp4 = pd.read_excel('/content/experiment4_clean.xlsx')

# Processing
exp3['answer'] = exp3.groupby(['scales', 'exp_group', 'workerid'])['response'].transform('mean')
exp4['answer'] = exp4.groupby(['scales', 'exp_group', 'workerid'])['response'].transform('mean')

exp3_1 = exp3[['workerid', 'scales', 'within_group', 'exp_group', 'answer', 'stimulus']].drop_duplicates(subset=['workerid', 'scales', 'within_group', 'exp_group', 'answer'], keep='first')
exp4_1 = exp4[['workerid', 'scales', 'within_group', 'exp_group', 'answer', 'stimulus']].drop_duplicates(subset=['workerid', 'scales', 'within_group', 'exp_group', 'answer'], keep='first')

exp3_1['obs'] = exp3_1.groupby(['scales', 'exp_group'])['workerid'].transform('count')
exp4_1['obs'] = exp4_1.groupby(['scales', 'exp_group'])['workerid'].transform('count')

for df in [exp3_1, exp4_1]:
    df['yes'] = df.groupby(['scales', 'exp_group'])['answer'].transform(lambda x: (x == 0).sum())
    df['unsure'] = df.groupby(['scales', 'exp_group'])['answer'].transform(lambda x: (x == 0.5).sum())
    df['no'] = df.groupby(['scales', 'exp_group'])['answer'].transform(lambda x: (x == 1).sum())

    df['yes_rate'] = df['yes'] / df['obs']
    df['unsure_rate'] = df['unsure'] / df['obs']
    df['no_rate'] = df['no'] / df['obs']

exp3_2 = exp3_1.drop(columns=['workerid', 'answer']).drop_duplicates().sort_values(['scales', 'exp_group'])
exp4_2 = exp4_1.drop(columns=['workerid', 'answer']).drop_duplicates().sort_values(['scales', 'exp_group'])

# Saving
exp3_2.to_excel('/content/experiment3_final.xlsx', index=False)
exp4_2.to_excel('/content/experiment4_final.xlsx', index=False)

# Download
files.download('/content/experiment3_final.xlsx')
files.download('/content/experiment4_final.xlsx')